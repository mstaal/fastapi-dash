---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: __APP__
  namespace: __K8S_NAMESPACE__
  labels:
    product: fastapi-dash
spec:
  replicas:  __K8S_REPLICAS__
  revisionHistoryLimit: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 50%
      maxSurge: 1
  selector:
    matchLabels:
      app: __APP__
      instance: app
  template:
    metadata:
      name: app
      labels:
        product: fastapi-dash
        app: __APP__
        instance: app
        version: "__APP_VERSION__"
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "__SERVER_PORT__"
        prometheus.io/scrape: "true"
        ad.datadoghq.com/__APP__.check_names: '["openmetrics"]'
        ad.datadoghq.com/__APP__.init_configs: '[{}]'
        ad.datadoghq.com/__APP__.instances: '[{"prometheus_url": "http://%%host%%:__SERVER_PORT__/metrics","namespace": "__K8S_NAMESPACE__","metrics": ["*"],"send_distribution_buckets": true}]'
        vault.security.banzaicloud.io/vault-role: "__VAULT_ROLE__"
    spec:
      hostname: __APP__
      containers:
        - name: __APP__
          image: __CONTAINER_IMAGE__
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: __SERVER_PORT__
              name: http
          envFrom:
            - configMapRef:
                name: __APP__-__ENV__
          resources:
            requests:
              memory: "768Mi"
              cpu: "50m"
            limits:
              memory: "2Gi"
              cpu: "1000m"
          readinessProbe:
            httpGet:
              path: /healthcheck/api/ping
              port: __SERVER_PORT__
            initialDelaySeconds: 30
            periodSeconds: 20
          livenessProbe:
            httpGet:
              path: /healthcheck/api/ping
              port: __SERVER_PORT__
            initialDelaySeconds: 60
            periodSeconds: 20
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 10001
